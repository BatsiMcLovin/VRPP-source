#version 330

layout (location = 0) in vec4 positionAttribute;
//layout (location = 1) in vec2 uvCoordAttribute;

uniform mat4 uniformModel;
uniform mat4 uniformView;
uniform mat4 uniformPerspective;

uniform float uniformScale;

uniform float uniformSinus;

out vec2 passUVCoords;
out float passDistance;

void main() {
   
	vec4 modelPos = ( uniformModel * vec4( 1.0, 0.0, 1.0, 1.0 ) ); 		//eigentliche Sinusbewegung
	vec4 viewPos  = ( uniformView  * modelPos) - vec4( positionAttribute.x, positionAttribute.y, 0.0, 0.0 );		
	
	passDistance = viewPos.z;

	gl_Position = vec4( positionAttribute.x, positionAttribute.y, 0.0, 1.0);
	gl_Position.xy += 0.5;															//scaling the panel/texture
//	gl_Position = uniformPerspective * viewPos;
//	gl_Position = uniformPerspective * ( ( uniformModel * positionAttribute )  + vec4( uniformView[3].xyz, 0.0) );
//	gl_Position = uniformPerspective * uniformView * uniformModel * positionAttribute;   
// 	gl_Position =  uniformPerspective * ( positionAttribute + vec4 ( uniformView[3].xyz, 0.0));
   
	passUVCoords = vec2( positionAttribute.x + 0.5, positionAttribute.y + 0.5);

}